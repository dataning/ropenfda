% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-data.R
\name{get_query}
\alias{get_query}
\alias{openfda}
\title{Construct an object representing a query to openFDA repository.}
\usage{
get_query(query = "", count_var = NULL, db = c("event", "classification",
  "510k", "pma", "registrationlisting", "recall", "enforcement", "udi",
  "label"), category = c("device", "drug", "food"), api_key = "",
  limit = 5100)

openfda(..., json = FALSE, quiet = FALSE)
}
\arguments{
\item{query}{character A query request.}

\item{count_var}{character A count variable, if empty the raw events are
returned.}

\item{db}{character A name of the openFDA database. Options are:
For category 'device': "event", "classification", "510k", "pma",
                       "registrationlisting", "recall", "enforcement",
                       "udi"}

\item{category}{character A category of the information to be retrieved.
Available options are: "device", "drug", "food".}

\item{api_key}{character A user api key.}

\item{limit}{numeric   A number of events to be returned. Not applicable
to count data.}

\item{...}{Parameters to pass to \code{get_query}}

\item{json}{logical if TRUE, store the raw JSON response in the object}

\item{quiet}{logical if TRUE, no warning messages are generated}
}
\value{
Return S4 object representing query but not the data.
}
\description{
Creating an S4 object used to fetch data from openFDA API by specifying
a filter on the values in the openFDA database. Allows to access all
device openFDA databases.
}
\section{Functions}{
\itemize{
\item \code{openfda}: Convenience function to retrieve data from API in a
one stop.
}}

\examples{

# A complex query returning raw data
query <- paste(
 '((adverse_event_flag == "N" and single_use_flag == "Y") or',
 '(adverse_event_flag == "Y" and single_use_flag == "N")) and',
 'date_received in [20130101,20130105]')

obj1 <- openfda(query, limit = 10)

# A simple query, returning any occurences of included phrase
obj2 <- openfda('source_type == "company representative"',
        limit = 10)

# Serches in any field
obj3 <- openfda("'company representative'", limit = 10)

# Returns exact phrase match
obj4 <- openfda('source_type.exact == "COMPANY REPRESENTATIVE"',
                    limit = 10)

obj5 <- openfda('source_type.exact == "REPRESENTATIVE"',
                    limit = 10)

# Complex count query
query <- paste0(
  '((adverse_event_flag == "N" and single_use_flag == "Y") or',
  '(adverse_event_flag == "Y" and single_use_flag == "N"))')

obj6 <- openfda(query, "date_facility_aware", limit = 10)

obj7 <- openfda(query, limit = 10, category = "drug")

obj8 <- openfda(query, limit = 10, category = "food")
}
